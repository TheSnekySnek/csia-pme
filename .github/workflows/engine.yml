# Documentation: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsuses
name: engine_workflow
run-name: engine workflow

on:
  push:
    paths:
      - .github/actions/build-and-push-docker-image-to-github/action.yml
      - .github/actions/execute-command-on-kubernetes-cluster/action.yml
      - .github/actions/test-python-app/action.yml
      - .github/workflows/engine.yml
      - engine/**/*

jobs:
  run-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Lint Python app
        uses: ./.github/actions/lint-python-app
        with:
          python-app-path: ./engine

      # - name: Test Python app
      #   uses: ./.github/actions/test-python-app
      #   with:
      #     python-app-path: ./engine

      - name: Build and push Docker image to GitHub
        # Only run on main
        if: github.ref == 'refs/heads/main'
        uses: ./.github/actions/build-and-push-docker-image-to-github
        with:
          docker-registry-username: ${{ github.actor }}
          docker-registry-password: ${{ secrets.GITHUB_TOKEN }}
          docker-image-name: ${{ github.repository }}-engine
          docker-image-context: ./engine

      - name: Prepare configuration files with secrets from GitHub Secrets
        # Only run on main
        if: github.ref == 'refs/heads/main'
        shell: bash
        working-directory: engine/kubernetes
        env:
          # MinIO
          MINIO_ROOT_USER: ${{ secrets.ENGINE_MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD: ${{ secrets.ENGINE_MINIO_ROOT_PASSWORD }}
          MINIO_DOMAIN: minio-csia-pme.kube.isc.heia-fr.ch
          MINIO_SERVER_URL: https://minio-csia-pme.kube.isc.heia-fr.ch
          MINIO_BROWSER_REDIRECT_URL: https://console-minio-csia-pme.kube.isc.heia-fr.ch
          # Mongo
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.ENGINE_MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.ENGINE_MONGO_INITDB_ROOT_PASSWORD }}
          # Engine
          S3_KEY_ID: ${{ secrets.ENGINE_ENGINE_S3_KEY_ID }}
          S3_SECRET_KEY: ${{ secrets.ENGINE_ENGINE_S3_SECRET_KEY }}
          S3_BUCKET: ${{ secrets.ENGINE_ENGINE_S3_BUCKET }}
          MONGO_URI: ${{ secrets.ENGINE_ENGINE_MONGO_URI }}
          MONGO_DB: ${{ secrets.ENGINE_ENGINE_MONGO_DB }}
          APP_EXTERNAL_URL: https://engine-csia-pme.kube.isc.heia-fr.ch
          S3_URL: https://minio-csia-pme.kube.isc.heia-fr.ch
        run: |
          # Set MinIO configuration
          yq '.data = (.data | to_entries | map({"key": .key, "value": "${" + .key + "}"}) | from_entries)' minio.config-map.yml | envsubst > new-minio.config-map.yml && mv new-minio.config-map.yml minio.config-map.yml
          # Set Mongo configuration
          yq '.data = (.data | to_entries | map({"key": .key, "value": "${" + .key + "}"}) | from_entries)' mongo.config-map.yml | envsubst > new-mongo.config-map.yml && mv new-mongo.config-map.yml mongo.config-map.yml
          # Set Engine configuration
          yq '.data = (.data | to_entries | map({"key": .key, "value": "${" + .key + "}"}) | from_entries)' engine.config-map.yml | envsubst > new-engine.config-map.yml && mv new-engine.config-map.yml engine.config-map.yml

      - name: Deploy Engine on Kubernetes cluster
        # Only run on main
        if: github.ref == 'refs/heads/main'
        uses: ./.github/actions/execute-command-on-kubernetes-cluster
        with:
          kube-config: ${{ secrets.KUBE_CONFIG }}
          kube-namespace: csia-pme-prod
          kubectl-context: ./engine/kubernetes
          kubectl-args: |
            apply \
              -f minio.pvc.yml \
              -f minio.config-map.yml \
              -f minio.stateful.yml \
              -f minio.service.yml \
              -f minio.ingress.yml \
              -f mongo.pvc.yml \
              -f mongo.config-map.yml \
              -f mongo.stateful.yml \
              -f mongo.service.yml \
              -f engine.config-map.yml \
              -f engine.stateful.yml \
              -f engine.service.yml \
              -f engine.ingress.yml
